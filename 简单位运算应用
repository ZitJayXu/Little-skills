01
#include<iostream>
using namespace std;
//位运算，一个数组中有一种数出现奇数次其他的数都出现偶数次，找这个奇数次的数
int findoddnum(int arr[], int n) {
	int Eor = arr[0];
	for (int i = 1; i < n; i++) {
		Eor = Eor ^ arr[i];
	}
	return Eor;
}
int main() {
	int list[13] = { 2,2,4,4,3,3,3,2,2,0,0,1,1 };
	cout << findoddnum(list, 13) << endl;
	return 0;
	system("pause");
}
02 
#include<iostream>
using namespace std;
//位运算，一个数组中有一种数出现奇数次其他的数都出现偶数次，找这个奇数次的数
int findoddnum(int arr[], int n) {
	int Eor = arr[0];
	for (int i = 1; i < n; i++) {
		Eor=Eor^arr[i];
	}
	return Eor;
}
//一个数组中有两种数出现了奇数次，其他数字出现偶数次，找到这两个数字
void findoddnum1(int arr[], int n) {
	int Eor = arr[0];
	for (int i = 1; i < n; i++) {
		Eor = Eor ^ arr[i];
	}
	int rightone = Eor & (~Eor + 1);
    
	int onlyone = 0;
	for (int j = 0; j < n; j++) {
		if (arr[j] & rightone !=0) {
			onlyone = onlyone ^ arr[j];
		}
	}
	cout << onlyone << "+" << (onlyone ^ Eor);
}
int main() {
	int list[14] = { 2,2,4,4,3,2,2,0,0,1,1,4 };
	findoddnum1(list, 12);
	return 0;
	system("pause");
}
